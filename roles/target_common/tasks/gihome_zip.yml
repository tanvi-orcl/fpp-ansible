
- name: 'Check GI Version before zipping'
  become: 'true'
  become_user: 'grid'
  become_method: 'sudo'
  shell:  |
    {{ oracle_home }}/bin/oraversion -compositeVersion
  register: 'composite_version_result'
- debug: { msg: '{{ composite_version_result }}' }

- name: 'Assert that composite version matches provided version_tag'
  assert:
    that: composite_version_result.stdout == version_tag
    quiet: 'true'

- name: 'Copy install_gi.excl File to Host if not present'
  become: 'true'
  become_user: 'root'
  become_method: 'sudo'
  copy:
    src: 'install_gi.excl'
    dest: '{{ exa_tmp_path }}'
    force: 'no'
  register: 'copy_script_result'
- debug: { msg: '{{ copy_script_result }}' }

- name: 'Create Zip File at {{ gi_zip_path }}/{{ image_name }}.zip'
  become: 'true'
  become_user: 'root'
  become_method: 'sudo'
  shell:  |
    zip -r {{ gi_zip_path }}/{{ image_name }}.zip .* * -x "..*" -x@{{ exa_tmp_path }}/install_gi.excl >{{ gi_zip_path }}/zip{{ image_name }}.out 2>{{ gi_zip_path }}/zip{{ image_name }}.err
  args:
    chdir: '{{ oracle_home }}'
  register: 'gi_zip_result'
  async: 5400
  poll: 120

- debug: { msg: '{{ gi_zip_result }}' }

- name: 'Encrypt Zip File'
  become: 'true'
  become_user: 'root'
  become_method: 'sudo'
  shell:  |
    {{ gpg_path }} --yes --batch --passphrase 'AdbCsPatching$' -c {{ gi_zip_path }}/{{ image_name }}.zip
  args:
    chdir: '{{ oracle_home }}'
  register: 'gi_encrypt_result'
- debug: { msg: '{{ gi_encrypt_result }}' }

# TO EDIT: Update Curl Method
- name: 'Upload encrypted image file to object store'
  become: 'true'
  become_user: 'root'
  become_method: 'sudo'
  shell:  |
    curl -T {{ gi_zip_path }}/{{ image_name }}.zip.gpg {{ container_url }}/
  environment:
    HTTPS_PROXY: '{{ curl_https_proxy }}'
  register: 'upload_result'
- debug: { msg: '{{ upload_result }}' }
# alternate upload method
# - name: Upload Zip file
#   ansible.builtin.uri:
#     url: '{{ container_url }}/{{ image_name }}.zip.gpg'
#     src: '{{ gi_zip_path }}/{{ image_name }}.zip.gpg'
#     remote_src: 'true'
#     user: '{{ curl_username }}'
#     password: '{{ curl_password }}'
#     force_basic_auth: 'yes'
#     method: PUT
#     status_code: 201
#     headers:
#       Content-Type: application/octet-stream


