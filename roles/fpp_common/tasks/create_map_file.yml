- name: 'Copy Bug List'
  become: 'true'
  become_user: 'oracle'
  become_method: 'sudo'
  shell:  |
    scp -i {{ identity_file }} opc@{{ target_node }}:{{ db_tmp_path }}/{{ image_name }}_bugs.lst {{ fpp_maps_path }}/{{ image_map_path }}
  register: 'bugs_list_result'
- debug:
    msg: '{{ bugs_list_result }}'

- name: 'Copy Template to create Map file'
  become: 'true'
  become_user: 'root'
  become_method: 'sudo'
  template:
    src: 'map.json'
    dest: '{{ fpp_maps_path }}/{{ image_map_path }}/{{ image_name }}.map'


# Update Master Map File if GI

- block:

  - name: Pull New Map Content From Uploaded File
    become: 'true'
    become_user: 'root'
    become_method: 'sudo'
    slurp:
      src: '{{ fpp_maps_path }}/{{ image_map_path }}/{{ image_name }}.map'    
    register: 'new_image_map'
  - debug:
        msg: '{{ new_image_map.content|b64decode|from_json }}'

  - name: Load Master Map From Container
    become: 'true'
    become_user: 'root'
    become_method: 'sudo'
    get_url:
      url: '{{ container_url }}/{{ master_map }}'
      dest: '{{ fpp_maps_path }}/{{ image_map_path }}'
    register: 'master_map'

  - name: Pull Master Map Content From File
    become: 'true'
    become_user: 'root'
    become_method: 'sudo'
    slurp:
      src: '{{ fpp_maps_path }}/{{ image_map_path }}/fiserv_gi_maps.json'
    register: 'master_map'
  - debug:
        msg: '{{ master_map.content|b64decode|from_json }}'

  - name: Appending New GI Map
    set_fact:
      updated_master_map: '{{ master_map.content|b64decode|from_json | default([]) | combine(new_image_map.content|b64decode|from_json) }}'
  - debug:
      var: updated_master_map

  - name: Write Master Map Content to File
    become: 'true'
    become_user: 'root'
    become_method: 'sudo'
    copy: 
      content: '{{ updated_master_map | to_nice_json }}'
      dest: '{{ fpp_maps_path }}/{{ image_map_path }}/master_map.json'
  - name: Write Master Map File to Container
    become: 'true'
    become_user: 'root'
    shell: 
      curl -X PUT --data-binary '@{{ fpp_maps_path }}/{{ image_map_path }}/master_map.json' {{ container_url }}/{{ master_map }}
    register: 'master_map_container'
  - debug:
        msg: '{{ master_map_container }}'

  when: image_type == 'grid'
  