
- name: 'Pull New Map Content From {{ image_name }}.map'
  become: 'true'
  become_user: 'root'
  become_method: 'sudo'
  slurp:
    src: '{{ fpp_maps_path }}/{{ image_map_dir }}/{{ image_name }}.map'    
  register: 'new_image_map'
- debug: { msg: '{{ new_image_map.content|b64decode|from_json }}' }

- name: 'Load Master Map From Container'
  become: 'true'
  become_user: 'root'
  become_method: 'sudo'
  shell:
    curl -o {{ fpp_maps_path }}/{{ image_map_dir }}/exa_map {{ container_url }}/exa_map
  environment:
    HTTPS_PROXY: '{{ curl_https_proxy }}'
  register: 'curl_master_map'
- debug: { msg: '{{ curl_master_map }}' }

- name: 'Pull Master Map Content From File'
  become: 'true'
  become_user: 'root'
  become_method: 'sudo'
  slurp:
    src: '{{ fpp_maps_path }}/{{ image_map_dir }}/exa_map'
  register: 'master_map_data'
- debug: { msg: '{{ master_map_data.content|b64decode|from_json }}' }

- name: 'Appending New GI Map to Master Map'
  set_fact:
    updated_master_map: '{{ master_map_data.content|b64decode|from_json | default([]) | combine(new_image_map.content|b64decode|from_json) }}'
- debug: { var: updated_master_map }

- name: 'Write Updated Master Map Content to File'
  become: 'true'
  become_user: 'root'
  become_method: 'sudo'
  copy: 
    content: '{{ updated_master_map | to_nice_json }}'
    dest: '{{ fpp_maps_path }}/{{ image_map_dir }}/exa_map'
- name: Write Master Map File to Container
  become: 'true'
  become_user: 'root'
  shell: 
    curl -X PUT --data-binary '@{{ fpp_maps_path }}/{{ image_map_dir }}/exa_map' {{ container_url }}/exa_map
  environment:
    HTTPS_PROXY: '{{ curl_https_proxy }}'
  register: 'master_map_container_result'
- debug: { msg: '{{ master_map_container_result }}' }