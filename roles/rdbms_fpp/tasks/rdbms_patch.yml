- name: 'Assert RDBMS Create Image Variables are defined.'
  assert: { that: db_unique_name is defined and source_home is defined and dest_home is defined }

- assert:
  that:
    - patch_error_param == '-revert' or patch_error_param == '-continue'
  when: patch_error_param is defined

- name: 'Check if DB Unique Name is valid'
  become: true
  become_user: 'root'
  become_method: 'sudo'
  shell: 'grep {{ db_unique_name }}: /etc/oratab'
  ignore_errors: 'yes'
  register: 'db_name_result'
- fail:
    msg: 'Database not valid.'
  when: not db_name_result.stdout | regex_search(db_unique_name)

- name: 'Delegating to FPP Host'
  block:
  
  - name: 'Run Prereqs if No Retry'
    block:

    - name: 'Check if Source Home is WC'
      include_tasks: 'rdbms_get_wc_name.yml'
      vars:
        db_home_name: '{{ source_home }}'
    - set_fact:
        source_wc: '{{ wc_name }}'

    - name: 'Check if Dest Home is WC'
      include_tasks: 'rdbms_get_wc_name.yml'
      vars:
        db_home_name: '{{ dest_home }}'
    - set_fact:
        dest_wc: '{{ wc_name }}'

    - name: 'Patch Database {{ db_unique_name }} EVAL'
      include_role:
        name: 'fpp_common'
        tasks_from: 'patch.yml'
      vars:
        target_node: '{{ ansible_hostname }}'
        eval_param: '-eval'
    
    when: patch_error_param is not defined

  - name: 'Patch Database {{ db_unique_name }}'
    include_role:
      name: 'fpp_common'
      tasks_from: 'patch.yml'
    vars:
      target_node: '{{ ansible_hostname }}'
  
  delegate_to: '{{ fpp_host }}'

# TO DO: Check if successful