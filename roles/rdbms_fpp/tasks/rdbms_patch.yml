- name: 'Assert RDBMS Create Image Variables are defined.'
  assert: { that: db_unique_name is defined and source_home is defined and dest_home is defined }

- name: 'Check if DB Unique Name is valid'
  become: true
  become_user: 'root'
  become_method: 'sudo'
  shell: 'grep {{ db_unique_name }}: /etc/oratab'
  ignore_errors: 'yes'
  register: 'db_name_result'
- fail:
    msg: 'Database not valid.'
  when: not db_name_result.stdout | regex_search(db_unique_name)

# TO CHECK: removed ignore_errors: 'no' flag 
- name: 'Check if Source Home is WC'
  include_tasks: 'rdbms_get_wc_name.yml'
  vars:
    db_home_name: '{{ source_home }}'
- set_fact:
    source_wc: '{{ wc_name }}'

- name: 'Check if Dest Home is WC'
  include_tasks: 'rdbms_get_wc_name.yml'
  vars:
    db_home_name: '{{ dest_home }}'
- set_fact:
    dest_wc: '{{ wc_name }}'

# changed to include
- block:
  - name: 'Patch Database {{ db_unique_name }} EVAL'
    include_role:
      name: 'fpp_common'
      tasks_from: 'patch.yml'
    vars:
      target_node: '{{ ansible_hostname }}'
      eval_param: '-eval'
    when: retry is not defined or retry == 'false'

  - name: 'Patch Database {{ db_unique_name }}'
    include_role:
      name: 'fpp_common'
      tasks_from: 'patch.yml'
    vars:
      target_node: '{{ ansible_hostname }}'
  delegate_to: '{{ fpp_host }}'

# TO DO: Check if successful