
- name: 'Check if Provided Image Exists'
  import_role:
    name: 'fpp_common'
    tasks_from: 'image_query.yml'
  delegate_to: '{{ fpp_host }}'
  run_once: 'true'

# Set dbhome name and check if it already exists

- block:
  - set_fact:
      ru_version_string: '{{ version_tag | regex_replace("\.", "") }}'
  - set_fact:
      db_home_name: 'dbhome1_{{ ru_version_string[:6] }}'
  when: db_home_name is not defined

- name: 'Check if {{ db_home_name }} Exists'
  include_role:
    name: 'target_common'
    tasks_from: 'dbhome_info.yml'

- assert:
    that: oracle_home is defined
    fail_msg: 'DB Home {{ db_home_name }} does not exist.'
    quiet: 'true'
  when: existing_home is defined and existing_home is true
- assert:
    that: oracle_home is not defined
    fail_msg: 'DB Home {{ db_home_name }} already exists, please pass in custom db_home_name.'
    quiet: 'true'
  when: existing_home is not defined or existing_home is false

# Set working copy name and check if it already exists

- name: 'Get WC Name and Check if Exists'
  include_tasks: 'rdbms_wc_name.yml'
  vars:
    ignore_errors_flag: 'yes'
- fail:
    msg: 'Working copy with name {{ wc_name }} already exists. Run on {{ ansible_host }} again with custom wc_name provided.'
  when: not query_wc_result.stdout | regex_search("does not exist")
  
# Create new home if existing_home is false

- block:

  - name: 'Create {{ version_tag }} DB Home for new WC'
    include_role:
      name: 'target_common'
      tasks_from: 'dbhome_create.yml'

  - name: 'Assert that oracle home and oracle base are defined.'
    assert:
      that: oracle_home is defined and oracle_base is defined
      success_msg: 'DB Home {{ db_home_name }} created with oracle_home {{ oracle_home }}'

  when: existing_home is not defined or existing_home is false

# Add home as working copy

- name: 'Add Working Copy'
  include_tasks: 'rdbms_wc_add.yml'
  