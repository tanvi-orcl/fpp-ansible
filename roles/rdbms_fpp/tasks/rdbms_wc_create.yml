
- set_fact:
    db_home_name: 'dbhome1_{{ ru_version | regex_replace("\.", "") }}'
  when: db_home_name is not defined

# Checks if database home exists

- name: 'Check if {{ db_home_name }} Exists'
  import_role:
    name: 'target_commands'
    tasks_from: 'dbhome_info.yml'

- assert:
    that: oracle_home is defined
    fail_msg: 'DB Home {{ db_home_name }} not found.'
    success_msg: 'DB Home {{ db_home_name }} exists with oracle_home {{ oracle_home }}'
  when: existing_home is true
- assert:
    that: oracle_home is not defined
    fail_msg: 'DB Home {{ db_home_name }} already exists, please pass in custom db_home_name.'
  when: existing_home is not defined or existing_home is false

- include_tasks:
    name: 'get_wc_name.yml'
  vars:
    ignore_errors_flag: 'yes'
- fail:
    msg: 'Working copy with name {{ wc_name }} already exists. Run on {{ ansible_hostname }} again with custom wc_name provided.'
  when: not query_wc_result.stdout | regex_search("does not exist")
  
# Create Home and Working Copy

- name: 'Create {{ ru_version }} DB Home for new WC'
  include_role:
    name: 'target_commands'
    tasks_from: 'dbhome_create.yml'
  when: existing_home is not defined or existing_home == 'false'

- assert: { that: oracle_home is defined }

- name: 'Add Working Copy'
  include_role:
    name: 'rdbms_fpp'
    tasks_from: 'rdbms_wc_add.yml'