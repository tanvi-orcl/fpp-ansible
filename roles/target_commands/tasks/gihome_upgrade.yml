
- name: 'Pull Oracle Home'
  when: oracle_home is not defined
  include_tasks: 'oracle_home.yml'
  vars:
    db_regex: '+ASM[0-9]'

- name: 'Upgrade GI'
  become: 'true'
  become_user: 'root'
  shell:  |
    {{ dbaascli_path }} patch grid upgrade --version {{ grid_version }} --targethome {{ oracle_home }}
  register: 'upgrade_gi_result'
- debug:
    msg: '{{ upgrade_gi_result }}'

- name: 'Copy File to Host'
  become: 'true'
  become_user: 'root'
  become_method: 'sudo'
  copy:
    src: 'install_gi.excl'
    dest: '{{ tmp_path }}'
  register: 'copy_script_result'
- debug:
    msg: '{{ copy_script_result }}'

- name: 'Create Zip File'
  become: 'true'
  become_user: 'root'
  become_method: 'sudo'
  shell:  |
    zip -r {{ gi_zip_path }}/{{ image_name }}.zip .* * -x "..*" -x@{{ tmp_path }}/install_gi.excl >~/zip{{ image_name }}.out 2>~/zip{{ image_name }}.err
  args:
    chdir: '{{ oracle_home }}'
  register: 'gi_zip_result'
- debug:
    msg: '{{ gi_zip_result }}'

- name: 'Encrypt Zip File'
  become: 'true'
  become_user: 'root'
  become_method: 'sudo'
  shell:  |
    {{ gpg_path }} --yes --batch --passphrase 'AdbCsPatching$' -c {{ gi_zip_path }}/{{ image_name }}.zip
  args:
    chdir: '{{ oracle_home }}'
  register: 'gi_encrypt_result'
- debug:
    msg: '{{ gi_encrypt_result }}'

- name: 'Upload encrypted image file to object store'
  become: 'true'
  become_user: 'root'
  become_method: 'sudo'
  shell:  |
    curl {{ curl_proxy_command }} -T {{ gi_zip_path }}/{{ image_name }}.zip.gpg {{ container_url }}
  register: 'upload_result'
- debug:
    msg: '{{ upload_result }}'

