
- name: 'Pull Oracle Home'
  when: oracle_home is not defined
  include_tasks: 'oracle_home.yml'
  vars:
    db_regex: '+ASM[0-9]'

- name: 'Upgrade GI'
  become: 'true'
  become_user: 'root'
  shell:  |
    /root/bin/dbaascli patch grid upgrade --version {{ grid_version }} --targethome {{ oracle_home }}
  register: 'upgrade_gi_result'
- debug:
    msg: '{{ upgrade_gi_result }}'

- name: 'Copy File to Host'
  become: 'true'
  become_user: 'root'
  become_method: 'sudo'
  copy:
    src: 'exclude_file'
    dest: '/root/tmp'
  register: 'copy_script_result'
- debug:
    msg: '{{ copy_script_result }}'

- name: 'Create Zip File'
  become: 'true'
  become_user: 'root'
  shell:  |
    nohup zip -r /root/tmp/{{ image_name }}.zip .* * -x "..*" -x@/root/tmp/{{ exclude_file }} >~/zip{{ image_name }}.out 2>~/zip{{ image_name }}.err &
  args:
    chdir: '{{ oracle_home }}'
  register: 'gi_zip_result'
- debug:
    msg: '{{ gi_zip_result }}'

- name: 'Encrypt Zip File'
  become: 'true'
  become_user: 'root'
  shell:  |
    /bin/gpg --yes --batch --passphrase 'AdbCsPatching$' -c /tmp/{{ image_name }}.zip
  args:
    chdir: '{{ oracle_home }}'
  register: 'gi_encrypt_result'
- debug:
    msg: '{{ gi_encrypt_result }}'

# TO DO: 
# figure out if container url is a folder (set up as single object right now in map)

- name: 'Upload encrypted image file to object store'
  become: 'true'
  become_user: 'root'
  shell:  |
    curl -T /tmp/{{ image_name }}.zip.gpg {{ map_container }}
  register: 'upload_result'
- debug:
    msg: '{{ upload_result }}'

